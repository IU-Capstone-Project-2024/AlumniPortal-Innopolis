  name: CI/CD Pipeline

  on:
    push:
      branches:
        - backend_services
    pull_request:
      branches:
        - backend_services

  jobs:
    build-and-deploy:
      runs-on: ubuntu-latest

      services:
        docker:
          image: docker:19.03.12
          options: --privileged
          ports:
            - 80:80
            - 8080:8080
            - 443:443

      env:
        DB: ${{ secrets.DB }}
        PORT: ${{ secrets.PORT }}
        SECRET: ${{ secrets.SECRET }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        SSH_HOST: ${{ secrets.SSH_HOST }}
        API_TOKEN: ${{ secrets.API_TOKEN }}
        OPENAI_KEY: ${{ secrets.OPENAI_KEY }}
        GITHUB_ACTIONS: true

      steps:
        - name: Checkout repository
          uses: actions/checkout@v2

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Log in to Team Lead Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Create 'web' network
          run: docker network create web || true

        - name: Build and push Docker images
          run: docker-compose build

        - name: Push Docker images
          run: |
            docker push danyadrakon/auth-service:latest
            docker push danyadrakon/requests-service:latest
            docker push danyadrakon/donation-service:latest
            docker push danyadrakon/event-service:latest
            docker push danyadrakon/project-service:latest
            docker push danyadrakon/volunteer-service:latest

        - name: Add SSH key
          uses: webfactory/ssh-agent@v0.5.3
          with:
            ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

        - name: Copy files to the server
          run: |
            rsync -avz -e "ssh -o StrictHostKeyChecking=no" --exclude='.git' --exclude='node_modules' ./ ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USERNAME }}/capstone/AlumniPortal-Innopolis

        - name: Deploy with docker-compose on remote server
          run: |
              ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
              cd /home/${{ secrets.SSH_USERNAME }}/capstone/AlumniPortal-Innopolis
              sudo docker network create web || true
              sudo docker-compose up -d --build
              EOF

        - name: Wait for services to be ready
          run: sleep 15
