name: CI/CD Pipeline

on:
  push:
    branches:
      - backend_services
  pull_request:
    branches:
      - backend_services

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 80:80
          - 8080:8080

    env:
      DB: ${{ secrets.DB }}
      PORT: ${{ secrets.PORT }}
      SECRET: ${{ secrets.SECRET }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      GITHUB_ACTIONS: true
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create 'web' network
        run: docker network create web || true
      
      - name: Build and push Docker images
        run: docker-compose build

      - name: Push Docker images
        run: |
          docker push danyadrakon/auth-service:latest
          docker push danyadrakon/requests-service:latest
          docker push danyadrakon/donation-service:latest
          docker push danyadrakon/event-service:latest
          docker push danyadrakon/project-service:latest
          docker push danyadrakon/volunteer-service:latest

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy files to the server
        run: |
            scp -o StrictHostKeyChecking=no -r . ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/home/creepydandota/capstone/AlumniPortal-Innopolis

      - name: Deploy with docker-compose on remote server
        run: |
            ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd /home/${{ secrets.SSH_USERNAME }}/capstone/AlumniPortal-Innopolis
            docker network create web || true
            docker-compose up -d --build
            EOF

      - name: Wait for services to be ready
        run: sleep 45

      - name: Validate deployment
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
          curl -I http://${{ SSH_HOST }}:80/auth/validate
          EOF