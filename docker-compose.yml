version: '3'

networks:
  web:
    external: true

services:
  traefik:
    image: traefik:latest
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--api.debug=true"
      - "--providers.docker=true"
      - "--providers.docker.network=web"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesResolvers.myresolver.acme.tlsChallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=d.vasilev@innopolis.university"
      - "--certificatesResolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./letsencrypt/acme.json:/letsencrypt/acme.json"
    networks:
      - web
    labels:
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.routers.web.rule=Host(`alumni-portal.ru`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls=true"
      - "traefik.http.routers.web.tls.certresolver=myresolver"
      - "traefik.http.routers.traefik.rule=Host(`traefik.alumni-portal.ru`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"

  auth-service:
    build:
      context: .
      dockerfile: AuthService/Dockerfile
    image:
      danyadrakon/auth-service:latest
    volumes:
      - ./shared:/app/shared
      - ./certs:/certs
    environment:
      - DB=${DB}
      - SECRET=${SECRET}
      - PORT=${PORT}
      - CERTIFICATE=${CERTIFICATE}
      - CERTIFICATEKEY=${CERTIFICATEKEY}
    labels:
      - "traefik.enable=true"  # Enable Traefik for this service
      - "traefik.http.routers.auth-service.rule=Host(`alumni-portal.ru`) && PathPrefix(`/auth`)"
      - "traefik.http.routers.auth-service.entrypoints=websecure"  # Use HTTPS entry point
      - "traefik.http.routers.auth-service.tls=true"
      - "traefik.http.routers.auth-service.tls.certresolver=myresolver"
      - "traefik.http.middlewares.auth-service-redirect-https.redirectscheme.scheme=https"  # Redirect HTTP to HTTPS
      - "traefik.http.routers.auth-service.middlewares=auth-service-redirect-https"  # Apply HTTPS redirection middleware
      - "traefik.http.middlewares.auth-service-cors.headers.accessControlAllowOriginList=https://alumni-inno.netlify.app"  # CORS settings
      - "traefik.http.middlewares.auth-service-cors.headers.accessControlAllowMethods=GET,POST,PUT,PATCH,DELETE,OPTIONS"
      - "traefik.http.middlewares.auth-service-cors.headers.accessControlAllowHeaders=Content-Type,Authorization"
      - "traefik.http.middlewares.auth-service-cors.headers.accessControlExposeHeaders=Content-Length"
      - "traefik.http.middlewares.auth-service-cors.headers.accessControlAllowCredentials=true"
      - "traefik.http.routers.auth-service.middlewares=auth-service-cors"  # Apply CORS middleware
      - "traefik.http.services.auth-service.loadbalancer.server.port=8081"  # Service port
    networks:
      - web
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  requests-service:
    build:
      context: .
      dockerfile: AdditionalRequestService/Dockerfile
    image:
      danyadrakon/requests-service:latest
    volumes:
      - ./shared:/app/shared
    environment:
      - DB=${DB}
      - SECRET=${SECRET}
      - PORT=${PORT}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.request-service.rule=PathPrefix(`/requests`)"
      - "traefik.http.services.request-service.loadbalancer.server.port=8082"
    networks:
      - web
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  donation-service:
    build:
      context: .
      dockerfile: DonationService/Dockerfile
    image:
      danyadrakon/donation-service:latest
    volumes:
      - ./shared:/app/shared
    environment:
      - DB=${DB}
      - SECRET=${SECRET}
      - PORT=${PORT}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.donation-service.rule=PathPrefix(`/donation`)"
      - "traefik.http.services.donation-service.loadbalancer.server.port=8083"
    networks:
      - web
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  filtering-service:
    build:
      context: .
      dockerfile: FilteringService/Dockerfile
    image:
      danyadrakon/filtering-service:latest
    volumes:
      - ./shared:/app/shared
    environment:
      - DB=${DB}
      - SECRET=${SECRET}
      - PORT=${PORT}
    networks:
      - web
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"


  event-service:
    build:
      context: .
      dockerfile: EventService/Dockerfile
    image:
      danyadrakon/event-service:latest
    volumes:
      - ./shared:/app/shared
    environment:
      - DB=${DB}
      - SECRET=${SECRET}
      - PORT=${PORT}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.event-service.rule=PathPrefix(`/events`)"
      - "traefik.http.services.event-service.loadbalancer.server.port=8084"
    networks:
      - web
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  project-service:
    build:
      context: .
      dockerfile: ProjectService/Dockerfile
    image:
      danyadrakon/project-service:latest
    volumes:
      - ./shared:/app/shared
    environment:
      - DB=${DB}
      - SECRET=${SECRET}
      - PORT=${PORT}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.project-service.rule=PathPrefix(`/projects`)"
      - "traefik.http.services.project-service.loadbalancer.server.port=8085"
    networks:
      - web
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  volunteer-service:
    build:
      context: .
      dockerfile: VolunteerService/Dockerfile
    image:
      danyadrakon/volunteer-service:latest
    volumes:
      - ./shared:/app/shared
    environment:
      - DB=${DB}
      - SECRET=${SECRET}
      - PORT=${PORT}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.volunteer-service.rule=PathPrefix(`/volunteer`)"
      - "traefik.http.services.volunteer-service.loadbalancer.server.port=8086"
    networks:
      - web
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
